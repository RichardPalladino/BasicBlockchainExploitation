pragma solidity ^0.6.6;

contract simpleReentrancy {
    mapping (address => uint256) private balances;

    function deposit() public payable {
        require((balances[msg.sender] + msg.value) >= balances[msg.sender]);
        balances[msg.sender] += msg.value;
    }

    function withdraw(uint256 withdrawAmnt) public returns(uint256) {
        require(withdrawAmnt <= balances[msg.sender]);
        // oh ... they have enough funds?  well, I guess I'll just send their money now
        msg.sender.call{value: withdrawAmnt};      // <----- that's the rentrancy issue

        balances[msg.sender] -= withdrawAmnt;
        return balances[msg.sender];
    }

    function getBalance() public view returns(uint256){
        return balances[msg.sender];
    }

}